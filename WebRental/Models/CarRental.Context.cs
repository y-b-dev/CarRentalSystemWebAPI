//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebRental.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CarRentalEntities : DbContext
    {
        public CarRentalEntities()
            : base("name=CarRentalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<Car> Cars { get; set; }
        public virtual DbSet<CarType> CarTypes { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<RentDetail> RentDetails { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int spAuthUser(string userName, string password, ObjectParameter resultID)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAuthUser", userNameParameter, passwordParameter, resultID);
        }
    
        public virtual ObjectResult<spGetBranches_Result> spGetBranches()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetBranches_Result>("spGetBranches");
        }
    
        public virtual ObjectResult<spGetCarByID_Result> spGetCarByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetCarByID_Result>("spGetCarByID", iDParameter);
        }
    
        public virtual ObjectResult<spGetCars_Result> spGetCars()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetCars_Result>("spGetCars");
        }
    
        public virtual ObjectResult<spGetCarTypes_Result> spGetCarTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetCarTypes_Result>("spGetCarTypes");
        }
    
        public virtual ObjectResult<spGetEmployees_Result> spGetEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetEmployees_Result>("spGetEmployees");
        }
    
        public virtual ObjectResult<spGetEmployeeWithUserByID_Result> spGetEmployeeWithUserByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetEmployeeWithUserByID_Result>("spGetEmployeeWithUserByID", iDParameter);
        }
    
        public virtual ObjectResult<spGetRents_Result> spGetRents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetRents_Result>("spGetRents");
        }
    
        public virtual ObjectResult<spGetRentsByUserID_Result> spGetRentsByUserID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetRentsByUserID_Result>("spGetRentsByUserID", iDParameter);
        }
    
        public virtual ObjectResult<spGetUserByID_Result> spGetUserByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUserByID_Result>("spGetUserByID", iDParameter);
        }
    
        public virtual ObjectResult<spGetUsers_Result> spGetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUsers_Result>("spGetUsers");
        }
    
        public virtual ObjectResult<spReturnCar_Result> spReturnCar(Nullable<int> carID, ObjectParameter carTableID, ObjectParameter rentID)
        {
            var carIDParameter = carID.HasValue ?
                new ObjectParameter("CarID", carID) :
                new ObjectParameter("CarID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReturnCar_Result>("spReturnCar", carIDParameter, carTableID, rentID);
        }
    
        public virtual ObjectResult<spGetCarWithTypeByID_Result> spGetCarWithTypeByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetCarWithTypeByID_Result>("spGetCarWithTypeByID", iDParameter);
        }
    
        public virtual ObjectResult<spGetUsersAndEmloyeesForManager_Result> spGetUsersAndEmloyeesForManager(Nullable<int> branchID)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUsersAndEmloyeesForManager_Result>("spGetUsersAndEmloyeesForManager", branchIDParameter);
        }
    }
}
